################################################################################
# ENVIRONTMENT
################################################################################
version: '3'

env:
  TARGET : fuzzy-pap.pdf
  DOC    : main
  SCRIPTS: org-doc-scripts
  IMG_DIR: ./sections/img
  MPAP_D : ./sup-doc/milp-pap-paper-frontiers


################################################################################
# RECIPES
################################################################################

tasks:

##==============================================================================
#
  default:
    cmds:
      - task: precheck
      - task: sup-images
      - task: images
      - task: pdf

##==============================================================================
#
  pipeline:
    cmds:
      - task: precheck
      - task: images
      - task: sup-images
      - task: set-version
      - task: pdf

##==============================================================================
#
  precheck:
    desc: "Make sure that all the dependencies are installed."
    cmds:
      - sh {{.SCRIPTS}}/check-packages
    silent: true

##==============================================================================
#
  images:
    desc: "Creates a PDF of all the files in {{.IMGDIR}}."
    vars:
      IMG_SRC:
        sh: ls {{.IMG_DIR}} | grep ".tex$"
    cmds:
      - |
        for i in {{.IMG_SRC | catLines}}
        do
          pdflatex -shell-escape -interaction=nonstopmode -output-directory {{.IMG_DIR}} ${i}
        done
    silent: false

##==============================================================================
#
  sup-images:
    desc: "Creates a PDF of all the files in {{.IMGDIR}}."
    vars:
      IMG_SRC:
        sh: ls {{.IMG_DIR}} | grep ".tex$"
    cmds:
      - go-task --version >/dev/null 2>&1 && go-task -d {{.MPAP_D}} images || echo ""
      - task --version >/dev/null 2>&1 && task -d {{.MPAP_D}} images || echo ""
    silent: false

##==============================================================================
#
  set-version:
    desc: "Dynamically sets the version of the document."
    vars:
      MAIN: main.tex
      VERSION:
        sh: git describe --tags
    cmds:
      - sed -i 's/\\date{\\today/\\date{\\today:{{.VERSION}}/' {{.MAIN}}
    silent: true

##==============================================================================
#
  pdf:
    desc: "Output {{.TARGET}} PDF."
    sources:
      - ./{{.DOC}}.tex
    generates:
      - ./{{.DOC}}.pdf
    cmds:
      - task: relative-path-bibtex
      - sh {{.SCRIPTS}}/build-pdf {{.DOC}} {{.TARGET}}
    silent: true

##==============================================================================
#
  relative-path-bibtex:
    desc: "Update the paths in the 'bibtex' command to be relative."
    cmds:
      - sh {{.SCRIPTS}}/relative-path-bibtex {{.DOC}}.tex

##==============================================================================
#
  update-modules:
    desc: "Update all the submodules"
    vars:
      DATE:
        sh: date +%Y-%m-%d
    cmds:
      - |
        git submodule foreach git pull
        git commit -am "Update modules: {{.DATE}}"
        git push

##==============================================================================
#
  clean:
    desc: "Clean up the project."
    cmds:
      - task --version >/dev/null 2>&1 && task -d {{.MPAP_D}} clean || echo ""
      - go-task --version >/dev/null 2>&1 && go-task -d {{.MPAP_D}} clean || echo ""
      - |
        # Clean up the document files
        rm -f {{.TARGET}}
        latexmk -silent -C {{.DOC}}.tex
    silent: true
